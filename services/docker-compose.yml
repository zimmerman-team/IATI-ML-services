services:
  statsd_exporter:
    build: statsd_exporter
    ports:
      - "127.0.3.1:9102:9102"
      - "127.0.3.1:9125:9125"
  prometheus:
    build: prometheus
    ports:
      - "127.0.3.1:9090:9090"
  grafana:
    build: grafana
    ports:
      - "127.0.3.1:3000:3000"
  mongo:
    build: mongo
    ports:
      - "127.0.3.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    volumes:
      - "./mongo/db:/data/db:rw"
    user: 1000:1000
  mlflow_ui:
    build: mlflow_ui
    ports:
      - "127.0.3.1:5000:5000"
    volumes:
      - "../mlruns:/mlruns"
  mlflow_exporter:
    build: mlflow_exporter
    ports:
      - "127.0.3.1:5500:5500"
    volumes:
      - "../mlruns:/mlruns"
  airflow_webserver:
    build: airflow_webserver
    depends_on:
      postgresql_for_airflow:
        condition: service_healthy
    ports:
      - "127.0.3.1:8080:8080"
    environment:
      - AIRFLOW_DATABASE_NAME=airflow_db
      - AIRFLOW_DATABASE_USERNAME=airflow_user
      - AIRFLOW_DATABASE_PASSWORD=${AIRFLOW_PG_PASSWORD}
      - AIRFLOW_DATABASE_HOST=${AIRFLOW_PG_HOST}
  airflow_scheduler:
    build: airflow_scheduler
    depends_on:
      postgresql_for_airflow:
        condition: service_healthy
    environment:
      - AIRFLOW_DATABASE_NAME=airflow_db
      - AIRFLOW_DATABASE_USERNAME=airflow_user
      - AIRFLOW_DATABASE_PASSWORD=${AIRFLOW_PG_PASSWORD}
      - AIRFLOW_DATABASE_HOST=postgresql_for_airflow
  postgresql_for_airflow:
    build: postgresql_for_airflow
    user: 0:0
    ports:
      - "127.0.3.1:5432:5432"
    environment:
      - POSTGRESQL_USERNAME=airflow_user
      - POSTGRESQL_PASSWORD=${AIRFLOW_PG_PASSWORD}
      - POSTGRESQL_POSTGRES_PASSWORD=${AIRFLOW_PG_PASSWORD}
      - POSTGRESQL_DATABASE=airflow_db
      - AIRFLOW_PG_HOST=postgresql_for_airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow_user"]
      interval: 5s
      timeout: 5s
      retries: 12
    volumes:
      - "./postgresql_for_airflow/volume:/bitnami/postgresql:rw"
